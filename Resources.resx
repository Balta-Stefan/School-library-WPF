<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActiveCheckboxText" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="AddLoanWindow_book" xml:space="preserve">
    <value>Book</value>
  </data>
  <data name="AddLoanWindow_copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="AddLoanWindow_Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="AddLoanWindow_ErrorWhileAdding" xml:space="preserve">
    <value>An error has occured while adding a loan</value>
  </data>
  <data name="AddLoanWindow_LoanAdded" xml:space="preserve">
    <value>The loan has been added</value>
  </data>
  <data name="AddLoanWindow_LoanSuccess" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="AddLoanWindow_member" xml:space="preserve">
    <value>Member</value>
  </data>
  <data name="AddLoanWindow_mustSelectCopy" xml:space="preserve">
    <value>You must select a copy</value>
  </data>
  <data name="AddLoanWindow_mustSelectMember" xml:space="preserve">
    <value>You must select a member</value>
  </data>
  <data name="AddLoanWindow_userInactiveMessage" xml:space="preserve">
    <value>Selected member is inactive</value>
  </data>
  <data name="AddNewBookButton" xml:space="preserve">
    <value>Add new book</value>
  </data>
  <data name="AddNewCopy" xml:space="preserve">
    <value>Add new copy</value>
  </data>
  <data name="AddNewMemberText" xml:space="preserve">
    <value>Add new member</value>
  </data>
  <data name="AddUserFormRequirementsMessage" xml:space="preserve">
    <value>You must fill all the fields and choose a user type.</value>
  </data>
  <data name="AppInitFailed" xml:space="preserve">
    <value>Application initialization has failed.Couldn't find config file.</value>
  </data>
  <data name="AuthorTextBlock" xml:space="preserve">
    <value>Author: </value>
  </data>
  <data name="AvailableText" xml:space="preserve">
    <value>Available: </value>
  </data>
  <data name="BookAdded" xml:space="preserve">
    <value>The book has been added.</value>
  </data>
  <data name="BooksTabName" xml:space="preserve">
    <value>Books</value>
  </data>
  <data name="ClearFiltersButton" xml:space="preserve">
    <value>Clear filters</value>
  </data>
  <data name="ConditionText" xml:space="preserve">
    <value>Condition: </value>
  </data>
  <data name="CopyAddedMessage" xml:space="preserve">
    <value>Copy added.</value>
  </data>
  <data name="CouldntAccessDatabase" xml:space="preserve">
    <value>Couldn't access the database</value>
  </data>
  <data name="CouldntAddCopy" xml:space="preserve">
    <value>Couldn't add copy.</value>
  </data>
  <data name="CouldntAddNewAuthor" xml:space="preserve">
    <value>Couldn't add new author!</value>
  </data>
  <data name="CouldntAddNewBook" xml:space="preserve">
    <value>Couldn't add the book!</value>
  </data>
  <data name="couldntAddNewGenre" xml:space="preserve">
    <value>Couldn't add new genre!</value>
  </data>
  <data name="DarkThemeText" xml:space="preserve">
    <value>Dark theme</value>
  </data>
  <data name="DataInputsEmpty" xml:space="preserve">
    <value>Inputs must not be empty!</value>
  </data>
  <data name="DeleteSelectedCopy" xml:space="preserve">
    <value>Delete selected copy</value>
  </data>
  <data name="DeliveryDateText" xml:space="preserve">
    <value>Delivery date: </value>
  </data>
  <data name="EditBookWindowName" xml:space="preserve">
    <value>Edit book info</value>
  </data>
  <data name="EditButton" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditionTextblock" xml:space="preserve">
    <value>Edition: </value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="GenreNameTextblock" xml:space="preserve">
    <value>Genre name: </value>
  </data>
  <data name="GenreTextBlock" xml:space="preserve">
    <value>Genre: </value>
  </data>
  <data name="IncorrectPassword" xml:space="preserve">
    <value>Given password is incorrect!</value>
  </data>
  <data name="LightThemeText" xml:space="preserve">
    <value>Light theme</value>
  </data>
  <data name="LoansTabName" xml:space="preserve">
    <value>_Loans</value>
  </data>
  <data name="Loans_AddLoanButton" xml:space="preserve">
    <value>Add loan</value>
  </data>
  <data name="Loans_BooksTextBlock" xml:space="preserve">
    <value>_Books</value>
  </data>
  <data name="Loans_BookTitle" xml:space="preserve">
    <value>Book title</value>
  </data>
  <data name="Loans_BorrowedAtDate" xml:space="preserve">
    <value>Borrowed at date: </value>
  </data>
  <data name="Loans_BorrowedFrom" xml:space="preserve">
    <value>Borrowed from: </value>
  </data>
  <data name="Loans_CopyID" xml:space="preserve">
    <value>Copy ID</value>
  </data>
  <data name="Loans_FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="Loans_LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="Loans_listbox_bookTitle" xml:space="preserve">
    <value>Book title: </value>
  </data>
  <data name="Loans_listbox_copyID" xml:space="preserve">
    <value>Copy ID: </value>
  </data>
  <data name="Loans_listbox_firstName" xml:space="preserve">
    <value>First name: </value>
  </data>
  <data name="Loans_listbox_lastName" xml:space="preserve">
    <value>Last name: </value>
  </data>
  <data name="Loans_listbox_returnedAt" xml:space="preserve">
    <value>Returned at date: </value>
  </data>
  <data name="Loans_listbox_userID" xml:space="preserve">
    <value>User ID: </value>
  </data>
  <data name="Loans_MembersTextBlock" xml:space="preserve">
    <value>_Members</value>
  </data>
  <data name="Loans_OnlyReturned" xml:space="preserve">
    <value>Only returned</value>
  </data>
  <data name="Loans_ReturnDate" xml:space="preserve">
    <value>Returned at date:</value>
  </data>
  <data name="Loans_ReturnedTo" xml:space="preserve">
    <value>Returned to:</value>
  </data>
  <data name="Loans_returnLoan" xml:space="preserve">
    <value>Return loan</value>
  </data>
  <data name="Loans_UserID" xml:space="preserve">
    <value>User ID</value>
  </data>
  <data name="LoginText" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="MembersTabName" xml:space="preserve">
    <value>_Members</value>
  </data>
  <data name="NewAuthorEmptyInputs" xml:space="preserve">
    <value>All fields for the new author must be filled out</value>
  </data>
  <data name="NewAuthorExpander" xml:space="preserve">
    <value>New author</value>
  </data>
  <data name="NewGenreEmptyInputs" xml:space="preserve">
    <value>All fields for the new genre must be filled out!</value>
  </data>
  <data name="NewGenreExpander" xml:space="preserve">
    <value>New genre</value>
  </data>
  <data name="NewPublisherExpander" xml:space="preserve">
    <value>New publisher</value>
  </data>
  <data name="NewPublisherFieldsEmpty" xml:space="preserve">
    <value>All fields for the new publisher must be filled out!</value>
  </data>
  <data name="NewPublisherNotAdded" xml:space="preserve">
    <value>Couldn't add new publisher!</value>
  </data>
  <data name="NoConditionSpecified" xml:space="preserve">
    <value>Condition not specified</value>
  </data>
  <data name="NumberOfCopiesTextBlock" xml:space="preserve">
    <value>Number of copies: </value>
  </data>
  <data name="OnlyActiveMembers" xml:space="preserve">
    <value>Only active members</value>
  </data>
  <data name="OnlyWithAvailableCopiesText" xml:space="preserve">
    <value>Only with available copies</value>
  </data>
  <data name="PasswordText" xml:space="preserve">
    <value>Password: </value>
  </data>
  <data name="PublisherNameTextblock" xml:space="preserve">
    <value>Publisher name: </value>
  </data>
  <data name="PublisherTextBlock" xml:space="preserve">
    <value>Publisher: </value>
  </data>
  <data name="SearchButton" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SelectConditionMessage" xml:space="preserve">
    <value>A condition must be selected!</value>
  </data>
  <data name="SelectDate" xml:space="preserve">
    <value>Select a date</value>
  </data>
  <data name="SelectDateMessage" xml:space="preserve">
    <value>Date must be selected!</value>
  </data>
  <data name="SettingsTabName" xml:space="preserve">
    <value>_Settings</value>
  </data>
  <data name="ShowHideFilters" xml:space="preserve">
    <value>Click to show/hide filters...</value>
  </data>
  <data name="ThemesText" xml:space="preserve">
    <value>Themes</value>
  </data>
  <data name="UserAddedMessage" xml:space="preserve">
    <value>User has been added.</value>
  </data>
  <data name="UsernameDoesntExist" xml:space="preserve">
    <value>Given username doesn't exist!</value>
  </data>
  <data name="UsernameText" xml:space="preserve">
    <value>Username: </value>
  </data>
  <data name="UserNotAddedError" xml:space="preserve">
    <value>An error has occured while adding a user.</value>
  </data>
  <data name="UserTypeText" xml:space="preserve">
    <value>User type: </value>
  </data>
</root>